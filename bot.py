import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
load_dotenv()
TOKEN = os.getenv('BOT_TOKEN')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    one_time_keyboard=False
).add(
    KeyboardButton('üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É'),
    KeyboardButton('üîÑ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É')
)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    game_button = InlineKeyboardMarkup()
    game_button.add(InlineKeyboardButton(
        text="‚ñ∂Ô∏è –ò–≥—Ä–∞—Ç—å —Å–µ–π—á–∞—Å", 
        url="https://example-game.com/play"
    ))
    
    await message.answer(
        "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Clicker Game!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å:",
        reply_markup=main_keyboard
    )
    await message.answer(
        "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∏–≥—Ä—É:",
        reply_markup=game_button
    )

@dp.message_handler(lambda message: message.text == 'üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É')
async def start_game(message: types.Message):
    game_button = InlineKeyboardMarkup()
    game_button.add(InlineKeyboardButton(
        text="üîµ –ò–≥—Ä–∞—Ç—å", 
        url="https://example-game.com/play"
    ))
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É:", reply_markup=game_button)

@dp.message_handler(lambda message: message.text == 'üîÑ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É')
async def game_link_handler(message: types.Message):
    game_button = InlineKeyboardMarkup()
    game_button.add(InlineKeyboardButton(
        text="üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏–≥—Ä–µ", 
        url="https://example-game.com/play"
    ))
    await message.answer("–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É:", reply_markup=game_button)

@dp.message_handler()
async def other_messages_handler(message: types.Message):
    await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:", reply_markup=main_keyboard)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
