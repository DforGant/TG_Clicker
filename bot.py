import os
import asyncio
import logging
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    logger.error("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ")
    exit(1)

WEB_APP_URL = os.getenv("app_url")  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É'), KeyboardButton(text='üîÑ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É')]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    web_app_button = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="‚ñ∂Ô∏è –ò–≥—Ä–∞—Ç—å —Å–µ–π—á–∞—Å",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ])
    await message.answer(
        "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Clicker Game!\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É –≤ Telegram.",
        reply_markup=main_keyboard
    )
    await message.answer("–ó–∞–ø—É—Å–∫ MiniApp:", reply_markup=web_app_button)

@dp.message(lambda message: message.text == 'üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É')
@dp.message(Command("game"))
async def game_handler(message: types.Message):
    game_button = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üîµ –ü–µ—Ä–µ–π—Ç–∏ –≤ MiniApp",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ])
    await message.answer("–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –≤ Telegram:", reply_markup=game_button)

@dp.message(lambda message: message.text == 'üîÑ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É')
async def refresh_handler(message: types.Message):
    await game_handler(message)

@dp.message()
async def fallback_handler(message: types.Message):
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.",
        reply_markup=main_keyboard
    )

async def main():
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
