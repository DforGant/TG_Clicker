import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import (ReplyKeyboardMarkup, 
                          KeyboardButton, 
                          InlineKeyboardMarkup, 
                          InlineKeyboardButton)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')

if not BOT_TOKEN:
    exit("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_keyboard = ReplyKeyboardMarkup(
    resize_keyboard=True,
    one_time_keyboard=False
).row(
    KeyboardButton('üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É'),
    KeyboardButton('üîÑ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É')
)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    game_button = InlineKeyboardMarkup().add(
        InlineKeyboardButton("‚ñ∂Ô∏è –ò–≥—Ä–∞—Ç—å —Å–µ–π—á–∞—Å", url="https://example-game.com/play")
    )
    
    await message.answer(
        "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Clicker Game!\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=main_keyboard
    )
    await message.answer(
        "–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É:",
        reply_markup=game_button
    )

@dp.message_handler(lambda m: m.text == 'üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É')
@dp.message_handler(commands=['game'])
async def game_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–≥—Ä—ã"""
    game_btn = InlineKeyboardMarkup().add(
        InlineKeyboardButton("üîµ –ü–µ—Ä–µ–π—Ç–∏ –∫ –∏–≥—Ä–µ", url="https://example-game.com/play")
    )
    await message.answer("–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É:", reply_markup=game_btn)

@dp.message_handler(lambda m: m.text == 'üîÑ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É')
async def refresh_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏"""
    await game_handler(message)

@dp.message_handler()
async def any_message_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await message.answer(
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/game - –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É",
        reply_markup=main_keyboard
    )

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    executor.start_polling(dp, skip_updates=True)
